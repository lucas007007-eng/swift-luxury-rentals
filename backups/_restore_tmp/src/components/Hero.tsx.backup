'use client'

import React, { useState } from 'react'
import SearchInterface from './SearchInterface'

interface HeroProps {
  onCitySelect?: (city: string) => void
  selectedCity?: string
}

const Hero: React.FC<HeroProps> = ({ onCitySelect, selectedCity = 'Berlin' }) => {
  const [showAllCities, setShowAllCities] = useState(false)

  // European cities organized by country
  const europeanCities = [
    { country: '🇩🇪 Germany', cities: ['Berlin', 'Munich'] },
    { country: '🇫🇷 France', cities: ['Paris', 'Lyon'] },
    { country: '🇳🇱 Netherlands', cities: ['Amsterdam', 'Rotterdam'] },
    { country: '🇦🇹 Austria', cities: ['Vienna', 'Salzburg'] },
    { country: '🇪🇸 Spain', cities: ['Barcelona', 'Madrid'] },
    { country: '🇬🇧 UK', cities: ['London', 'Edinburgh'] },
    { country: '🇮🇹 Italy', cities: ['Rome', 'Milan'] },
    { country: '🇨🇿 Czech Rep.', cities: ['Prague'] },
    { country: '🇩🇰 Denmark', cities: ['Copenhagen'] },
    { country: '🇨🇭 Switzerland', cities: ['Zurich'] }
  ]

  // Show only first 6 cities initially
  const primaryCities = ['Berlin', 'Paris', 'Amsterdam', 'Vienna', 'Barcelona', 'London']

  return (
    <section className="relative bg-black overflow-x-hidden pt-24 pb-12 md:pt-32 md:pb-16 lg:pt-40 lg:pb-20 w-full">
      {/* Video Background */}
      <div className="absolute inset-0 z-0">
        <video 
          autoPlay 
          loop 
          muted 
          playsInline
          preload="auto"
          className="w-full h-full object-cover"
          style={{
            filter: 'contrast(1.2) saturate(1.3) brightness(1.4)',
            imageRendering: 'high-quality'
          }}
        >
          <source src="/videos/swift luxury home.mp4" type="video/mp4" />
          <source src="/videos/swift luxury home.webm" type="video/webm" />
          {/* Fallback image if video doesn't load */}
          <div 
            className="w-full h-full bg-cover bg-center"
            style={{
              backgroundImage: `url('https://images.unsplash.com/photo-1587564979-6d4b7d0cb2b9?ixlib=rb-4.0.3&auto=format&fit=crop&w=2070&q=80')`
            }}
          />
        </video>
      </div>
      <div className="absolute inset-0 bg-black/30 z-10" />

      {/* Content */}
      <div className="relative z-20 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center w-full">
        <div className="space-y-8 sm:space-y-10 md:space-y-12 lg:space-y-16">
          
          {/* Luxury Crypto Payment Highlight */}
          <div className="relative max-w-5xl lg:max-w-6xl mx-auto group">
            {/* Animated background glow */}
            <div className="absolute -inset-1 bg-gradient-to-r from-gold-400 via-amber-300 to-gold-400 rounded-3xl blur-lg opacity-25 group-hover:opacity-40 animate-pulse transition-all duration-1000"></div>
            
            {/* Main card */}
            <div className="relative bg-black/70 backdrop-blur-xl border border-white/30 rounded-3xl px-6 py-4 lg:px-8 lg:py-6 xl:px-10 xl:py-8 shadow-2xl">
              {/* Premium badge */}
              <div className="absolute -top-2.5 left-1/2 transform -translate-x-1/2">
                <div className="bg-gradient-to-r from-amber-400 to-gold-500 text-black px-5 py-1.5 rounded-full text-xs font-black tracking-wider shadow-lg">
                  AI POWERED
                </div>
              </div>
              
              <div className="text-center pt-2">
                {/* Main heading */}
                <h3 
                  className="text-lg sm:text-xl md:text-2xl lg:text-3xl xl:text-4xl mb-3 md:mb-4 lg:mb-6 tracking-tight text-white font-bold"
                >
                  Swift Luxury Home Rentals
                </h3>
                
                {/* Payment methods with animations */}
                <div className="flex justify-center items-center flex-wrap gap-2 sm:gap-3 md:gap-4 lg:gap-6 mb-3 md:mb-4 lg:mb-6">
                  {/* Credit Card */}
                  <div className="group/payment flex items-center space-x-1.5 sm:space-x-2 lg:space-x-3 hover:scale-110 transition-transform duration-300 bg-white/10 rounded-full px-3 sm:px-4 lg:px-5 xl:px-6 py-1.5 sm:py-2 lg:py-3">
                    <div className="w-6 sm:w-7 lg:w-8 xl:w-10 h-6 sm:h-7 lg:h-8 xl:h-10 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center shadow-lg">
                      <svg className="w-3 sm:w-4 lg:w-5 xl:w-6 h-3 sm:h-4 lg:h-5 xl:h-6 text-white" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M20 4H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6c0-1.11-.89-2-2-2zm0 14H4v-6h16v6zm0-10H4V6h16v2z"/>
                      </svg>
                    </div>
                    <span className="text-white font-semibold text-xs sm:text-sm lg:text-base xl:text-lg">Credit Card</span>
                  </div>
                  
                  {/* Bitcoin */}
                  <div className="group/payment flex items-center space-x-1.5 sm:space-x-2 lg:space-x-3 hover:scale-110 transition-transform duration-300 bg-white/10 rounded-full px-3 sm:px-4 lg:px-5 xl:px-6 py-1.5 sm:py-2 lg:py-3">
                    <div className="w-6 sm:w-7 lg:w-8 xl:w-10 h-6 sm:h-7 lg:h-8 xl:h-10 bg-gradient-to-r from-orange-400 to-yellow-500 rounded-full flex items-center justify-center shadow-lg">
                      <span className="text-white font-bold text-xs sm:text-sm lg:text-base xl:text-lg">₿</span>
                    </div>
                    <span className="text-white font-semibold text-xs sm:text-sm lg:text-base xl:text-lg">Bitcoin</span>
                  </div>
                  
                  {/* Ethereum */}
                  <div className="group/payment flex items-center space-x-1.5 sm:space-x-2 lg:space-x-3 hover:scale-110 transition-transform duration-300 bg-white/10 rounded-full px-3 sm:px-4 lg:px-5 xl:px-6 py-1.5 sm:py-2 lg:py-3">
                    <div className="w-6 sm:w-7 lg:w-8 xl:w-10 h-6 sm:h-7 lg:h-8 xl:h-10 bg-gradient-to-r from-blue-400 to-purple-500 rounded-full flex items-center justify-center shadow-lg">
                      <span className="text-white font-bold text-xs sm:text-sm lg:text-base xl:text-lg">Ξ</span>
                    </div>
                    <span className="text-white font-semibold text-xs sm:text-sm lg:text-base xl:text-lg">Ethereum</span>
                  </div>
                  
                  {/* USDT */}
                  <div className="group/payment flex items-center space-x-1.5 sm:space-x-2 lg:space-x-3 hover:scale-110 transition-transform duration-300 bg-white/10 rounded-full px-3 sm:px-4 lg:px-5 xl:px-6 py-1.5 sm:py-2 lg:py-3">
                    <div className="w-6 sm:w-7 lg:w-8 xl:w-10 h-6 sm:h-7 lg:h-8 xl:h-10 bg-gradient-to-r from-green-400 to-emerald-500 rounded-full flex items-center justify-center shadow-lg">
                      <span className="text-white font-bold text-xs sm:text-sm lg:text-base xl:text-lg">₮</span>
                    </div>
                    <span className="text-white font-semibold text-xs sm:text-sm lg:text-base xl:text-lg">USDT</span>
                  </div>
                </div>
                
                {/* Luxury description */}
                <div className="bg-black/60 backdrop-blur-sm rounded-xl p-2.5 sm:p-3 lg:p-4 xl:p-6 border border-white/20">
                  <p className="text-white/90 text-sm sm:text-base lg:text-lg xl:text-xl font-medium text-center leading-relaxed">
                    <span className="text-amber-300 font-semibold">Luxury Apartments with seamless Crypto & Card Payments.</span>
                    <br />
                    <span className="text-white/85">Perfect for 1-6 month stays across Europe's finest cities.</span>
                    <br />
                    <span className="text-white/70 text-xs sm:text-sm">EU regulated • Instant conversion • Direct landlord payment</span>
                  </p>
                </div>
              </div>
            </div>
          </div>

          {/* Search Interface */}
          <div className="max-w-4xl lg:max-w-5xl mx-auto relative px-4 sm:px-0">
            <SearchInterface 
              onSearch={(searchData) => {
                console.log('Search data:', searchData)
                // Handle search functionality here
              }}
            />
          </div>

            {/* European Cities */}
            <div className="max-w-6xl lg:max-w-7xl mx-auto">
              {!showAllCities ? (
                // Primary cities view
                <div className="space-y-6">
                  <div className="flex flex-wrap justify-center gap-2 sm:gap-3 lg:gap-4">
                    {primaryCities.map((city) => (
                      <button
                        key={city}
                        onClick={() => onCitySelect?.(city)}
                        className={`px-3 sm:px-4 lg:px-5 xl:px-6 py-1.5 sm:py-2 lg:py-3 font-semibold rounded-full hover:scale-105 transition-all duration-300 text-xs sm:text-sm lg:text-base xl:text-lg border backdrop-blur-sm shadow-lg hover:shadow-xl ${
                          selectedCity === city 
                            ? 'bg-black/80 text-white border-white/70 shadow-xl' 
                            : 'bg-black/70 text-white border-white/40 hover:bg-black/75 hover:border-white/60'
                        }`}
                      >
                        📍 {city}
                      </button>
                    ))}
                  </div>
                  <div className="text-center mt-8">
                    <button
                      onClick={() => setShowAllCities(true)}
                      className="px-4 sm:px-6 py-1.5 sm:py-2 bg-amber-500/20 text-amber-200 font-semibold rounded-full hover:bg-amber-500/30 hover:scale-105 transition-all duration-300 text-xs sm:text-sm border border-amber-400/30 hover:border-amber-400/50 backdrop-blur-sm shadow-lg hover:shadow-xl"
                    >
                      View All European Cities →
                    </button>
                  </div>
                </div>
              ) : (
                // All cities organized by country
                <div className="space-y-6">
                  <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                    {europeanCities.map((countryGroup) => (
                      <div key={countryGroup.country} className="bg-white/10 backdrop-blur-sm rounded-2xl p-4 border border-white/20">
                        <h4 className="text-white font-bold text-sm mb-3 text-center">{countryGroup.country}</h4>
                        <div className="flex flex-wrap justify-center gap-2">
                          {countryGroup.cities.map((city) => (
                            <button
                              key={city}
                              onClick={() => onCitySelect?.(city)}
                              className={`px-4 py-2 font-medium rounded-full hover:scale-105 transition-all duration-300 text-xs border backdrop-blur-sm ${
                                selectedCity === city 
                                  ? 'bg-black/80 text-white border-white/70 shadow-xl' 
                                  : 'bg-black/70 text-white border-white/40 hover:bg-black/75 hover:border-white/60'
                              }`}
                            >
                              {city}
                            </button>
                          ))}
                        </div>
                      </div>
                    ))}
                  </div>
                  <div className="text-center">
                    <button
                      onClick={() => setShowAllCities(false)}
                      className="px-8 py-3 bg-white/20 text-white font-semibold rounded-full hover:bg-white/30 hover:scale-105 transition-all duration-300 text-sm border border-white/30 hover:border-white/50 backdrop-blur-sm shadow-lg hover:shadow-xl"
                    >
                      ← Show Less
                    </button>
                  </div>
                </div>
              )}
            </div>
        </div>
      </div>
    </section>
  )
}

export default Hero
